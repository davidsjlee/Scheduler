{"version":3,"sources":["UserContext.js","utils/course.js","components/Course.js","components/CourseSelector.js","components/TermSelector.js","components/CourseList.js","components/Forms/colors.js","components/Forms/FormErrorMessage.js","components/Forms/FormTextInput.js","components/Forms/FormButton.js","components/Forms/FormSwitch.js","components/Form.js","components/Forms/Form.js","components/Forms/FormField.js","screens/CourseEditScreen.js","screens/ScheduleScreen.js","screens/CourseDetailScreen.js","App.js"],"names":["UserContext","createContext","termMap","F","W","S","terms","Object","values","getCourseTerm","course","id","charAt","allDays","timesPat","timeConflict","course1","course2","days1","days","days2","some","day","includes","hours1","hours","hours2","Math","max","start","min","end","hasConflict","selected","filter","meets","exec","match","hh1","mm1","hh2","mm2","addTimes","selection","courseButtonBase","flex","borderRadius","justifyContent","alignItems","margin","height","padding","minWidth","maxWidth","styles","StyleSheet","create","courseButton","backgroundColor","courseButtonDisabled","courseButtonSelected","courseText","color","fontSize","textAlign","Course","isDisabled","isSelected","select","view","TouchableOpacity","style","onPress","onLongPress","Text","slice","getCourseNumber","courseList","flexDirection","flexWrap","CourseSelector","courses","useState","setSelected","toggle","x","View","map","key","TermButton","term","setSelectedTerm","isActive","termText","termButtonBase","termSelector","width","termButton","termButtonActive","TermSelector","selectedTerm","CourseList","termCourses","ScrollView","primary","secondary","black","white","ghostWhite","lightGrey","mediumGrey","red","FormErrorMessage","error","visible","errorText","marginLeft","Colors","marginBottom","fontWeight","FormTextInput","leftIcon","rightIcon","handlePasswordVisibility","otherProps","container","MaterialCommunityIcons","name","size","icon","TextInput","input","placeholderTextColor","rightIconStyles","marginVertical","marginRight","alignSelf","button","buttonText","textTransform","title","Form","props","children","initialValues","onSubmit","validationSchema","Fragment","Base","Field","useFormikContext","setFieldTouched","setFieldValue","errors","touched","value","onChangeText","text","onBlur","Button","handleSubmit","ErrorMessage","Switch","onChange","onValueChange","field","fieldContainer","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","label","CourseEditScreen","route","params","Yup","shape","required","matches","SafeAreaView","placeholder","autoCapitalize","autoFocus","Banner","bannerStyle","paddingTop","ScheduleScreen","navigation","user","useContext","canEdit","role","schedule","setSchedule","useEffect","a","async","fetch","response","ok","json","fetchSchedule","navigate","CourseDetailScreen","Stack","createStackNavigator","App","Provider","NavigationContainer","Navigator","Screen","component","options"],"mappings":"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","file":"static/js/app.2097872d.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;\r\n","// getCourseTerm(course) => string\r\n//   given a course, returns the term the course is in\r\n//\r\n// getCourseNumber(course) => string\r\n//   given a course, returns its course number\r\n//\r\n// terms -- a variable set to the list of academic terms\r\nconst termMap = { F: 'Fall', W: 'Winter', S: 'Spring'};\r\nconst terms = Object.values(termMap);\r\n\r\n\r\nconst getCourseTerm = course => (\r\n  termMap[course.id.charAt(0)]\r\n);\r\n\r\nconst getCourseNumber = course => (\r\n  course.id.slice(1)\r\n)\r\n\r\n// addTimes(course) => void\r\n//   given a course with a meeting time, e.g., \"MTuWF 9:00-10:30\"\r\n//   adds a days value, e.g., [\"M\", \"Tu\", \"W\", \"F\"]\r\n//     and an hours value, e.g., { start: 540, end: 630 },\r\n//     with start and end in minutes past midnight\r\n\r\nconst allDays = ['M', 'Tu', 'W', 'Th', 'F', 'Sa', 'Su'];\r\nconst timesPat = /(\\d\\d?):(\\d\\d) *[ -] *(\\d\\d?):(\\d\\d)/;\r\n\r\nconst addTimes = (course) => {\r\n  course.days = allDays.filter(day => course.meets.includes(day));\r\n\r\n  const [match, hh1, mm1, hh2, mm2] = timesPat.exec(course.meets);\r\n  if (match) {\r\n    course.hours = {\r\n      start: hh1 * 60 + mm1 * 1,\r\n      end: hh2 * 60 + mm2 * 1\r\n    }\r\n  };\r\n}\r\n\r\n// hasConflict(course, selected) => boolean\r\n//   given a course and list of courses\r\n//   returns true if course conflicts with any item in selected\r\n//\r\n// courseConflict(course1, course1) => boolean\r\n//   given two courses\r\n//   returns if they are not the same course, occur in the\r\n//     same quarter, have at least one day in common, and\r\n//     the start/end times overlap\r\n\r\nconst daysOverlap = (days1, days2) => (\r\n  days1 && days2 && days2.some(day => days1.includes(day))\r\n);\r\n\r\nconst hoursOverlap = (hours1, hours2) => (\r\n  hours1 && hours2 && Math.max(hours1.start, hours2.start) < Math.min(hours1.end, hours2.end)\r\n);\r\n\r\nconst timeConflict = (course1, course2) => (\r\n  daysOverlap(course1.days, course2.days) && hoursOverlap(course1.hours, course2.hours)\r\n);\r\n\r\nconst courseConflict = (course1, course2) => (\r\n  course1 !== course2\r\n  && getCourseTerm(course1) === getCourseTerm(course2)\r\n  && timeConflict(course1, course2)\r\n);\r\n\r\n// SIDE EFFECT: the first time a course is compared to other courses,\r\n// its meeting times are parsed and added, so that this work\r\n// doesn't need to be done again. Clear the days field if\r\n// changing meeting times.\r\nconst hasConflict = (course, selected) => {\r\n  if (!course.days) addTimes(course);\r\n  return selected.some(selection => courseConflict(course, selection))\r\n};\r\n\r\nexport { getCourseNumber, getCourseTerm, hasConflict, terms }\r\n","import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { getCourseNumber } from '../utils/course';\r\n\r\nconst Course = ({course, isDisabled, isSelected, select, view}) => (\r\n  <TouchableOpacity style={styles[isSelected ? 'courseButtonSelected' : isDisabled ? 'courseButtonDisabled' : 'courseButton']}\r\n      onPress={() => {if (!isDisabled) select(course);}}\r\n      onLongPress={() => view(course)}>\r\n    <Text style={styles.courseText}>\r\n      {`CS ${getCourseNumber(course)}\\n${course.meets}`}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst courseButtonBase = {\r\n  flex: 1,\r\n  borderRadius: 5,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  margin: 10,\r\n  height: 60,\r\n  padding: 10,\r\n  minWidth: 90,\r\n  maxWidth: 90,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  courseButton: {\r\n    ...courseButtonBase,\r\n    backgroundColor: '#66b0ff',\r\n  },\r\n  courseButtonDisabled: {\r\n    ...courseButtonBase,\r\n    backgroundColor: '#d3d3d3',\r\n  },\r\n  courseButtonSelected: {\r\n    ...courseButtonBase,\r\n    backgroundColor: '#004a99',\r\n  },\r\n  courseText:{\r\n    color: '#fff',\r\n    fontSize: 12,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default Course;\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport Course from './Course';\r\nimport { hasConflict } from '../utils/course';\r\n\r\nconst CourseSelector = ({courses, view}) => {\r\n  const [selected, setSelected] = useState([]);\r\n\r\n// come back and understand this\r\n  const toggle = course => setSelected(selected => (\r\n    selected.includes(course) ? selected.filter(x => x !== course) : [...selected, course]\r\n  ));\r\n\r\n  return (\r\n    <View style={styles.courseList}>\r\n      {\r\n        courses.map(course => (\r\n          <Course key={course.id} course={course}\r\n          isDisabled={hasConflict(course, selected)}\r\n          isSelected={selected.includes(course)}\r\n          select={toggle}\r\n          view={view} />\r\n        ))\r\n      }\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  courseList: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nexport default CourseSelector;\r\n","import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { terms } from '../utils/course';\r\n\r\nconst TermButton = ({term, setSelectedTerm, isActive}) => (\r\n  <TouchableOpacity style={styles[isActive ? 'termButtonActive' : 'termButton']}\r\n      onPress={() => setSelectedTerm(term)}>\r\n    <Text style={styles.termText}>{term}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst TermSelector = ({selectedTerm, setSelectedTerm}) => (\r\n  <View style={styles.termSelector}>\r\n    {\r\n      terms.map(term => (\r\n        <TermButton key={term} term={term} setSelectedTerm={setSelectedTerm}\r\n        isActive={term === selectedTerm}\r\n        />\r\n      ))\r\n    }\r\n  </View>\r\n);\r\n\r\nconst termButtonBase = {\r\n  flex: 1,\r\n  borderRadius: 5,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  margin: 10,\r\n  height: 40,\r\n  padding: 10,\r\n  minWidth: 90,\r\n  maxWidth: 90,\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  termSelector: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: 350,\r\n  },\r\n  termButton: {\r\n    ...termButtonBase,\r\n    backgroundColor: '#4f9f64',\r\n  },\r\n  termText: {\r\n    color: '#fff',\r\n    fontSize: 15,\r\n  },\r\n  termButtonActive: {\r\n  ...termButtonBase,\r\n  backgroundColor: '#105f25',\r\n  },\r\n});\r\n\r\nexport default TermSelector;\r\n","import React, { useState } from 'react';\r\nimport { ScrollView } from 'react-native';\r\nimport Course from './Course';\r\nimport CourseSelector from './CourseSelector';\r\nimport TermSelector from './TermSelector';\r\nimport { getCourseTerm } from '../utils/course';\r\n\r\nconst CourseList = ({courses, view}) => {\r\n  const [selectedTerm, setSelectedTerm] = useState('Fall');\r\n  const termCourses = courses.filter(course => selectedTerm === getCourseTerm(course));\r\n  return (\r\n    <ScrollView>\r\n      <TermSelector selectedTerm={selectedTerm} setSelectedTerm={setSelectedTerm} />\r\n      <CourseSelector courses={termCourses} view={view} />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nexport default CourseList;\r\n","export default {\r\n  primary: '#f57c00',\r\n  secondary: '#039be5',\r\n  black: '#222222',\r\n  white: '#ffffff',\r\n  ghostWhite: '#f8f8ff',\r\n  lightGrey: '#f9f9f9',\r\n  mediumGrey: '#6e6869',\r\n  red: '#fc5c65'\r\n};\r\n","import React from 'react';\r\nimport { StyleSheet, Text } from 'react-native';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormErrorMessage({ error, visible }) {\r\n  if (!error || !visible) {\r\n    return null;\r\n  }\r\n\r\n  return <Text style={styles.errorText}>{error}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  errorText: {\r\n    marginLeft: 15,\r\n    color: Colors.red,\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n    fontWeight: '600'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { View, StyleSheet, TextInput, TouchableOpacity } from 'react-native';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormTextInput({\r\n  leftIcon,\r\n  width = '100%',\r\n  rightIcon,\r\n  handlePasswordVisibility,\r\n  ...otherProps\r\n}) {\r\n  return (\r\n    <View style={[styles.container, { width }]}>\r\n      {leftIcon && (\r\n        <MaterialCommunityIcons\r\n          name={leftIcon}\r\n          size={20}\r\n          color={Colors.mediumGrey}\r\n          style={styles.icon}\r\n        />\r\n      )}\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholderTextColor={Colors.mediumGrey}\r\n        {...otherProps}\r\n      />\r\n      {rightIcon && (\r\n        <TouchableOpacity onPress={handlePasswordVisibility}>\r\n          <MaterialCommunityIcons\r\n            name={rightIcon}\r\n            size={20}\r\n            color={Colors.mediumGrey}\r\n            style={styles.rightIconStyles}\r\n          />\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: Colors.lightGrey,\r\n    borderRadius: 25,\r\n    flexDirection: 'row',\r\n    padding: 15,\r\n    marginVertical: 10\r\n  },\r\n  icon: {\r\n    marginRight: 10\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    width: '100%',\r\n    fontSize: 18,\r\n    color: Colors.black\r\n  },\r\n  rightIconStyles: {\r\n    alignSelf: 'center',\r\n    marginLeft: 10\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormButton({ title, color = 'primary' }) {\r\n  const { handleSubmit, values } = useFormikContext();\r\n  const text = typeof title === 'function' ? title(values) : title;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.button, { backgroundColor: Colors[color] }]}\r\n      onPress={handleSubmit}\r\n    >\r\n      <Text style={styles.buttonText}>{text}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    marginVertical: 10,\r\n    borderRadius: 25,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 15,\r\n    width: '100%'\r\n  },\r\n  buttonText: {\r\n    color: Colors.white,\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    textTransform: 'uppercase'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { StyleSheet, Switch, Text, View } from 'react-native';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport Colors from './colors';\r\n\r\nexport default function FormSwitch({name, title, onChange = x => x, ...otherProps}) {\r\n  const { values, setFieldValue } = useFormikContext();\r\n  const value = values[name];\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Switch\r\n        value={value}\r\n        onValueChange={(value) => {\r\n          onChange(value);\r\n          setFieldValue(name, value);\r\n        }}\r\n        {...otherProps}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row'\r\n  },\r\n  title: {\r\n    color: Colors.white,\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    marginRight: 5,\r\n  },\r\n});","\r\nimport Base from './Forms/Form';\r\nimport FormField from './Forms/FormField';\r\nimport FormButton from './Forms/FormButton';\r\nimport FormErrorMessage from './Forms/FormErrorMessage';\r\nimport FormSwitch from './Forms/FormSwitch';\r\n\r\nconst Form = props => Base(props);\r\n\r\nForm.Field = FormField;\r\nForm.Button = FormButton;\r\nForm.ErrorMessage = FormErrorMessage;\r\nForm.Switch = FormSwitch;\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nexport default function Form({\r\n  children,\r\n  initialValues,\r\n  onSubmit,\r\n  validationSchema\r\n}) {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {() => <React.Fragment>{children}</React.Fragment>}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useFormikContext } from 'formik';\r\n\r\nimport FormErrorMessage from './FormErrorMessage';\r\nimport FormTextInput from './FormTextInput';\r\n\r\nexport default function FormField({ name, width, ...otherProps }) {\r\n  const {\r\n    setFieldTouched,\r\n    setFieldValue,\r\n    values,\r\n    errors,\r\n    touched\r\n  } = useFormikContext();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormTextInput\r\n        value={values[name]}\r\n        onChangeText={text => setFieldValue(name, text)}\r\n        onBlur={() => setFieldTouched(name)}\r\n        width={width}\r\n        {...otherProps}\r\n      />\r\n      <FormErrorMessage error={errors[name]} visible={touched[name]} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native';\r\nimport * as Yup from 'yup';\r\nimport Form from '../components/Form';\r\n\r\nconst Field = ({label, field}) => {\r\n  return (\r\n    <View style={styles.fieldContainer}>\r\n      <Text style={styles.label}>{label}</Text>\r\n      <Text style={styles.field}>{field}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CourseEditScreen = ({route}) => {\r\n  const course = route.params.course;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    id: Yup.string()\r\n      .required()\r\n      .matches(/(F|W|S)\\d{3,}/, 'Must be a term and 3-digit number')\r\n      .label('ID'),\r\n    meets: Yup.string()\r\n      .required()\r\n      .matches(/(M|Tu|W|Th|F)+ +\\d\\d?:\\d\\d-\\d\\d?:\\d\\d/, 'Must be weekdays followed by start and end time')\r\n      .label('Meeting times'),\r\n    title: Yup.string()\r\n      .required()\r\n      .label('Title'),\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n      <Form\r\n        initialValues={{\r\n          id: course.id,\r\n          meets: course.meets,\r\n          title: course.title,\r\n        }}\r\n        validationSchema={validationSchema}\r\n      >\r\n          <Form.Field\r\n            name=\"id\"\r\n            leftIcon=\"identifier\"\r\n            placeholder=\"F110\"\r\n            autoCapitalize=\"none\"\r\n            autoFocus={true}\r\n          />\r\n          <Form.Field\r\n            name=\"meets\"\r\n            leftIcon=\"calendar-range\"\r\n            placeholder=\"MThu 12:00-13:50\"\r\n            autoCapitalize=\"none\"\r\n          />\r\n          <Form.Field\r\n            name=\"title\"\r\n            leftIcon=\"format-title\"\r\n            placeholder=\"Introduction to programming\"\r\n          />\r\n        </Form>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#ccccb3'\r\n  },\r\n  field: {\r\n    height: 40,\r\n    width: 300,\r\n    padding: 5,\r\n    backgroundColor: 'white',\r\n  },\r\n  fieldContainer: {\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.23,\r\n    shadowRadius: 2.62,\r\n    elevation: 4,\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport default CourseEditScreen;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, SafeAreaView } from 'react-native';\r\nimport UserContext from '../UserContext';\r\nimport CourseList from '../components/CourseList';\r\nimport CourseEditScreen from './CourseEditScreen';\r\n\r\nconst Banner = ({title}) => (\r\n  <Text style={styles.bannerStyle}>{title || '[loading...]'}</Text>\r\n);\r\n\r\nconst ScheduleScreen = ({navigation}) => {\r\n  const user = useContext(UserContext);\r\n  const canEdit = user && user.role === 'admin';\r\n  const [schedule, setSchedule] = useState({title: '', courses: []});\r\n\r\n  const view = (course) => {\r\n    navigation.navigate(canEdit ? 'CourseEditScreen' : 'CourseDetailScreen', { course });\r\n  };\r\n\r\n  const url = 'https://courses.cs.northwestern.edu/394/data/cs-courses.php';\r\n\r\n  useEffect(() => {\r\n    const fetchSchedule = async () => {\r\n    const response = await fetch(url);\r\n      if (!response.ok) throw response;\r\n      const json = await response.json();\r\n      setSchedule(json);\r\n    }\r\n    fetchSchedule();\r\n  }, []); // the empty list is to ensure data is not fetched every re-render\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Banner title={schedule.title} error={schedule.error} />\r\n      <CourseList courses={schedule.courses} view={view} />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingTop: 20, //change back to 20\r\n  },\r\n  bannerStyle: {\r\n    color: '#888',\r\n    fontSize: 32,\r\n  },\r\n});\r\n\r\nexport default ScheduleScreen;\r\n","import React from 'react';\r\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native';\r\n\r\nconst Field = ({label, field}) => {\r\n  return (\r\n    <View style={styles.fieldContainer}>\r\n      <Text style={styles.label}>{label}</Text>\r\n      <Text style={styles.field}>{field}</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst CourseDetailScreen = ({route}) => {\r\n  //hardcode for now\r\n  const course = route.params.course;\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ScrollView>\r\n        <Field label=\"ID\" field={course.id} />\r\n        <Field label=\"Meeting times\" field={course.meets} />\r\n        <Field label=\"Title\" field={course.title} />\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#ccccb3'\r\n  },\r\n  field: {\r\n    height: 40,\r\n    width: 300,\r\n    padding: 5,\r\n    backgroundColor: 'white',\r\n  },\r\n  fieldContainer: {\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.23,\r\n    shadowRadius: 2.62,\r\n    elevation: 4,\r\n  },\r\n  label: {\r\n    fontWeight: 'bold',\r\n  }\r\n});\r\n\r\nexport default CourseDetailScreen;\r\n","import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UserContext from './UserContext';\nimport ScheduleScreen from './screens/ScheduleScreen';\nimport CourseDetailScreen from './screens/CourseDetailScreen';\nimport CourseEditScreen from './screens/CourseEditScreen';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  const [user, setUser] = useState({ role: 'admin' });\n\n  return (\n    <UserContext.Provider value={user}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"ScheduleScreen\"\n            component={ScheduleScreen}\n            options={{ title: 'Schedule' }} />\n          <Stack.Screen name=\"CourseDetailScreen\"\n            component={CourseDetailScreen}\n            options={{ title: 'Course Detail' }} />\n          <Stack.Screen name=\"CourseEditScreen\"\n            component={CourseEditScreen}\n            options={{ title: 'Course Editor' }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}